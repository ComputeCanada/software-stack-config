function set_props(t)
   ------------------------------------------------------------
   -- table of properties for fullnames or sn

   local propT = {
      [ { "armadillo", "arpack-ng", "blacs", "cgal", "clhep", "cudnn", "dealii", "dealii-petsc", "eigen", "elpa", "fftw", "fftw-mpi", "fftw-serial", "flint", "glpk", "gsl", "gurobi", "harminv", "hypre", "igraph", "imkl", "jags", "libcerf", "libgpuarray", "libmatheval", "libmesh", "libtricubic", "libxsmm", "lis", "lpsolve", "magma", "mcl", "mesquite", "metis", "mpfi", "muparser", "nektar++", "nlopt", "ntl", "openblas", "p4est", "parmetis", "parmgridgen", "pcl", "pfft", "python27-scipy-stack", "python35-scipy-stack", "qhull", "qrupdate", "scalapack", "scipy-stack", "scotch", "sprng", "su2", "suitesparse", "superlu", "viennacl", "voro++", "wham", "xgboost" } ]       = { {name = "type_", value = "math" }, },
      [ { "abinit", "adf", "alamode", "amber", "apbs", "atom", "atomicrex", "atompaw", "autodock_vina", "beef", "bigdft", "casm", "chemps2", "cp2k", "cfour", "cfour-mpi", "cpmd", "ctffind", "dalton", "delft3d", "demon2k", "dl_poly4", "dssp", "elk", "frealign", "g_mmpbsa", "gamess-us", "gaussian", "gctf", "gromacs", "gromacs-plumed", "jdftx", "kim", "lammps", "lammps-omp", "lammps-user-intel", "latte", "libgridxc", "libint", "libxc", "molden", "mscg", "multiwfn", "namd", "namd-mpi", "namd-multicore", "namd-ofi", "namd-ucx", "namd-verbs", "namd-verbs-smp", "neper", "nwchem", "octopus", "open3dqsar", "openbabel", "openmm", "openmolcas", "orca", "p4vasp", "pcmsolver", "phana", "plumed", "psi4", "quantumespresso", "rdkit", "relion", "rosetta",  "siesta", "spglib", "towhee", "vasp", "wannier90", "wannier90-abinit", "yaehmop" } ]       = { {name = "type_", value = "chem" }, },
      [ { "mpe2", "mpi.net", "mvapich2", "openmpi" } ]       = { {name = "type_", value = "mpi" }, },
      [ { "abyss", "admixture", "afni", "allpaths-lg", "angsd", "annovar", "arcs", "augustus", "bamm", "bamtools", "bamutil", "bayesass", "bayescan", "baypass", "bbmap", "bcftools", "bcl2fastq2", "beast", "beagle-lib", "bedtools", "bioperl", "blasr", "blasr_libcpp", "blast", "blast+", "blat", "bolt-lmm", "bowtie", "bowtie2", "bpp-core", "bpp-phyl-omics", "bpp-phyl", "bpp-popgen", "bpp-seq-omics", "bpp-seq", "breakdancer", "busco", "bwa", "canu", "canvas", "cap3", "casper", "cd-hit", "cellranger", "centrifuge", "clustal-omega", "cnvnator", "corset", "cufflinks", "dcm2niix", "detonate", "diamond", "discosnp", "discovardenovo", "dtiprep", "eems", "eigensoft", "emboss", "erds", "exonerate", "falcon", "fast-gbs", "fasta", "fastme", "fastp", "fastq_screen", "fastqc", "fastsimcoal2", "fasttree", "fastx-toolkit", "filtlong", "fraggenescan", "freebayes", "freesurfer", "fsl", "fusioncatcher", "gapfiller", "gate", "gatk", "gatk-queue", "gcta", "gemma", "genometools", "gmap-gsnap", "gossamer", "grnboost", "hal", "hh-suite", "hisat2", "hmmer", "htslib", "hyphy", "igblast", "impute2", "infernal", "interproscan", "iq-tree", "jellyfish", "kaiju", "kallisto", "kentutils", "kraken", "kraken2", "last", "libgtextutils", "libmaus2", "libplinkio", "links", "lobstr", "locarna", "lumpy", "mach", "mafft", "maker", "manta", "marvel", "masurca", "maxbin", "mefit", "megahit", "meraculous", "metabat", "metal", "metaphlan", "minc-toolkit", "minia", "miniasm", "minimac2", "minimac3", "minimap", "minimap2", "mira", "mitobim", "mixcr", "mothur", "mrbayes", "mrtrix", "msmc", "multovl", "mummer", "mummer-64bit", "muscle", "nanopolish", "neuron", "nextgenmap", "ngs-bits", "ngstools", "orthomcl", "paml", "pbbam", "pbdagcon", "pbsuite", "pear", "penncnv", "percolator", "phylip", "phylobayes", "phylobayes-mpi", "phyx", "picard", "pindel", "pilon", "plast", "platanus", "platypus", "plink", "pplacer", "prank", "prinseq", "prodigal", "proovread", "psmc", "quorum", "racon", "randfold", "raxml", "ray", "r-bundle-bioconductor", "reapr", "recon", "repasthpc", "repeatmasker", "repeatmodeler", "repeatscout", "rmblast", "rnammer", "roary", "rsem", "rtk", "sabre", "salmon", "salmonbeta", "sambamba", "samblaster", "samtools", "selscan", "shotmap", "sift4g", "signalp", "soapdenovo2", "sortmerna", "spades", "sra-toolkit", "sspace_basic", "sspace-longread", "seqan", "seqmule", "seqtk", "sga", "sickle", "snap", "snpeff", "speedseq", "squid", "stacks", "star", "stringtie", "structure", "subread", "sumaclust", "supernova", "tabix", "tmhmm", "tophat", "transrate", "trans-abyss", "transdecoder", "trimal", "trimmomatic", "trinity", "trinotate", "trf", "trnascan-se", "vcftools", "velvet", "verifybamid", "viennarna", "vsearch", "motioncor2" } ]       = { {name = "type_", value = "bio"}, },
      [ { "advisor", "arrow", "ascp", "argtable", "bazel", "blitz++", "boost", "boost-mpi", "chapel", "chapel-single", "chapel-slurm-gasnetrun_ibv", "clang", "cmake", "cppunit", "cromwell", "cuda", "cunit", "dakota", "dmalloc", "dotnet-core-runtime", "eclipse", "elixir", "erlangotp", "expat", "fpc", "freexl", "ga", "gcc", "git-annex", "glost", "go", "googletest", "gtk+3", "guile", "hpl", "inspector", "intel", "ipp", "itac", "java", "julia", "kokkos", "leveldb", "libconfig", "libctl", "llvm", "make", "mariadb", "matlab", "maven", "mcr", "mono", "mpe", "mpi4py", "mumps-metis", "mumps-parmetis", "mysql", "nccl", "networkx", "nodejs", "octave", "openpgm", "osu-micro-benchmarks", "papi", "parallel", "python27-mpi4py", "python35-mpi4py", "perl", "perl4-corelibs", "petsc", "petsc-64bits", "petsc-complex", "petsc-debug", "postgresql", "protobuf", "python", "pypy", "qjson", "qscintilla", "qt", "qt5", "qwt", "qwtpolar", "r", "remora", "root", "rstudio-server", "ruby", "rubygems", "rust", "sagemath", "sbt", "sdl", "sdl2", "sip", "snappy", "spark", "tau", "tbb", "tcl", "tktable", "trilinos", "udunits", "valgrind-mpi", "vtune", "xerces-c++", "wxwidgets", "xdrfile", "xmlf90", "yaxt", "zeromq" } ]          = { {name = "type_", value = "tools"}, },
      [ { "abaqus", "alberta", "alpscore", "ansys", "berkeleygw", "cgns", "comsol", "cst", "feko", "fluent", "grackle", "geant4", "gmsh", "heasoft", "libspatialindex", "libspatialite", "ls-dyna", "ls-dyna-mpi", "ls-opt", "meep", "mesa-astrophysics", "met", "mfem", "oasys-ls-dyna", "openfoam", "openfoam-extend", "peridigm", "sedifoam", "sextractor", "spherls", "starccm", "starccm-mixed", "shengbte", "xmm-sas" } ] = { {name = "type_", value = "phys"}, },
      [ { "bufrlib", "ccsm", "cdo", "cesm", "cwp_su", "eccodes", "esmf", "gdal", "g2clib", "g2lib", "gdal", "gdal-mpi", "geos", "gmt", "grass", "proj", "proj4-fortran", "pwrf", "qca", "qgis", "wgrib2", "wps", "wrf", "wrf-fire" } ] = { {name = "type_", value = "geo"}, },
      [ { "ants", "appleseed", "blender", "ccfits", "cfitsio", "circos", "ferret", "glm", "gnuplot", "grace", "itk", "jasper", "libgd", "mesa", "mitsuba", "ncl", "ncview", "opencv", "opencv_contrib", "openexr", "opencolorio", "openimageio", "openslide", "osl", "paraview", "paraview-offscreen", "paraview-offscreen-gpu", "pgplot", "povray", "seexpr", "visit", "vmd", "vtk", "vtk-mpi", "xcrysden" } ] = { {name = "type_", value = "vis"}, },
      [ { "etsf_io", "h4toh5", "hdf", "hdf5", "hdf5-mpi", "hdf5-serial", "matio", "nco", "netcdf", "netcdf-c++", "netcdf-c++4", "netcdf-c++4-mpi", "netcdf-c++-mpi", "netcdf-fortran", "netcdf-fortran-mpi", "netcdf-mpi", "netcdf-serial", "pnetcdf" } ] = { {name = "type_", value = "io"}, },
      [ { "caffe", "caffe2", "mkl-dnn", "theano", "torch" } ] = { { name = "type_", value = "ai" }, },
   }

   for k,v in pairs(propT) do
     ------------------------------------------------------------
     -- Look for fullName first otherwise sn
     if (has_value(k,myModuleFullName()) or has_value(k,myModuleName())) then
        ----------------------------------------------------------
        -- Loop over value array and fill properties for this module.
        for i = 1,#v do
           local entry = v[i]
           add_property(entry.name, entry.value)
	   whatis("Keyword:" .. entry.value)
        end
     end
   end
end
